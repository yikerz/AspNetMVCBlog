@model Blog.Web.Models.View.AddBlogPostRequest
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Add New Blog Post - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    <form method="post">
        <div class="mb-3">
            <label class="form-label">Heading</label>
            <input type="text" id="heading" class="form-control" asp-for="Heading" />
        </div>
        <div class="mb-3">
            <label class="form-label">Page Title</label>
            <input type="text" id="pageTitle" class="form-control" asp-for="PageTitle" />
        </div>
        <div class="mb-3">
            <label class="form-label">Content</label>
            <textarea id="content" class="form-control" asp-for="Content"></textarea>
        </div>
        <div class="mb-3">
            <label class="form-label">Short Description</label>
            <input type="text" id="shortDescription" class="form-control" asp-for="ShortDescription" />
        </div>
        @* 123. Create file upload input *@
        <div class="mb-3">
            <label class="form-label">Featured Image Upload</label>
            <input type="file" id="featuredImageUpload" class="form-control" />
            @* 130. Create image tag to display the image after upload *@
            <img src="" id="featuredImageDisplay" style="display: none; width: 300px;"/>
        </div>
        <div class="mb-3">
            <label class="form-label">Featured Image URL</label>
            <input type="text" id="featuredImageUrl" class="form-control" readonly asp-for="FeaturedImageUrl" />
        </div>
        <div class="mb-3">
            <label class="form-label">URL Handle</label>
            <input type="text" id="urlHandle" class="form-control" asp-for="UrlHandle" />
        </div>
        <div class="mb-3">
            <label class="form-label">Published Date</label>
            <input type="date" id="publishedDate" class="form-control" asp-for="PublishedDate" />
        </div>
        <div class="mb-3">
            <label class="form-label">Author</label>
            <input type="text" id="author" class="form-control" asp-for="Author" />
        </div>
        <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
            <label class="form-check-label">
                Is Visible?
            </label>
        </div>

        <div class="mb-3">
            <label class="form-label">Tags</label>
            <select class="form-select"
                    asp-items="@Model.Tags"
                    asp-for="SelectedTags"></select>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-dark">Save</button>
        </div>

    </form>
</div>

@section Scripts {
    <script>
        var editor = new FroalaEditor('#content');

        /* 124. Add change event listener to featuredImageUpload */
        const featuredUploadElement = document.getElementById("featuredImageUpload");
        featuredUploadElement.addEventListener('change', uploadFeaturedImage);
        /* 128. Get element featuredImageUrl */
        const featuredImageUrlElement = document.getElementById("featuredImageUrl");
        /* 131. Get element featuredImageUpload */
        const featuredImageDisplayElement = document.getElementById("featuredImageDisplay");

        /* 125. Create function for event listener */
        async function uploadFeaturedImage(e) {
            /* 126. Create new FormData and add incoming file */
            let data = new FormData();
            data.append('file', e.target.files[0]);
            /* 127. Fetch data to controller */
            await fetch('/api/images', {
                method: "POST",
                headers: {
                    'Accept': '*/*'
                },
                body: data,
            }).then(response => response.json())
                .then(result => { 
                    /* 129. Auto-fill featured Image URL */
                    featuredImageUrlElement.readOnly = false;
                    featuredImageUrlElement.value = result.link;
                    featuredImageUrlElement.readOnly = true;
                    /* 131. Switch on display */
                    featuredImageDisplayElement.src = result.link;
                    featuredImageDisplayElement.style.display = 'block';
                });
        }


    </script>
}