@* 229. Inject signInManager and userManager *@
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model Blog.Web.Models.View.BlogDetailsViewModel


@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate</span>
                </div>
                <div class="mb-3">
                    @* 230. Show clickable thumbs up icon if logged in *@
                    @if (signInManager.IsSignedIn(User))
                    {
                      <a id="btnLike" style="cursor: pointer">
                            <i class="bi bi-hand-thumbs-up"></i>
                      </a>  
                    }
                    <span>@Model.TotalLikes</span> likes
                </div>

                <div class="mb-3 d-flex">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-details-content">
                    @Html.Raw(Model.Content)
                </div>
            }
            else
            {
                <p>Blog post not found</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        /* 241. Add click listener to like button */
        const btnLikeElement = document.getElementById("btnLike");
        btnLikeElement.addEventListener("click", addLikeForBlog);

        /* 242. Create function addLikeForBlog */
        async function addLikeForBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ 
                    blogPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })
            }).then(console.log('Like request finished'))
                .catch(error => { 
                    console.log(error)
                })
        }

    </script>
}